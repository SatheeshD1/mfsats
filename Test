WITH numbered_rows AS (
  SELECT 
    t2.uetr,
    t2.subpmttp,
    ROW_NUMBER() OVER (PARTITION BY t2.uetr ORDER BY t2.subpmttp) AS row_num
  FROM table2 t2
),
max_columns AS (
  SELECT MAX(row_num) AS max_count
  FROM numbered_rows
),
column_definitions AS (
  SELECT 
    string_agg(
      format('MAX(CASE WHEN row_num = %s THEN uetr END) AS uetr%s, 
              MAX(CASE WHEN row_num = %s THEN subpmttp END) AS subpmttp%s', 
             i, i, i, i),
      ', '
    ) AS columns_sql
  FROM generate_series(1, (SELECT max_count FROM max_columns)) i
)
SELECT format(
  'SELECT t1.*, %s
   FROM table1 t1
   LEFT JOIN (
     SELECT uetr, %s
     FROM numbered_rows
     GROUP BY uetr
   ) t2 ON t1.uetr = t2.uetr',
  columns_sql,
  columns_sql
) AS dynamic_query
FROM column_definitions;






_____

WITH templates_to_delete AS (
    SELECT DISTINCT srti.template_id
    FROM scpay_ui_gbl.scpay_reports_template_info srti
    LEFT JOIN LATERAL (
        SELECT *
        FROM scpay_ui_gbl.scpay_schedule_reports
        WHERE ctry_cd = srti.ctry_cd 
        AND template_id = srti.template_id
        ORDER BY generated_at DESC LIMIT 1
    ) scr ON srti.ctry_cd = scr.ctry_cd 
        AND srti.template_id = scr.template_id
    WHERE srti.user_id != 'SYSTEM'
    AND srti.template_id NOT LIKE 'REPORTS_SYS_%'
    AND (
        -- Case 1: Template was never used (no generation history)
        scr.template_id IS NULL
        OR
        -- Case 2: Template was not used in last 90 days
        date(scr.generated_at) <= (current_date - 90)
    )
)
DELETE FROM scpay_ui_gbl.scpay_reports_template_info
WHERE template_id IN (SELECT template_id FROM templates_to_delete);
