import React, { useState, useRef, useEffect } from 'react';

const CustomCountrySelect = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedCountry, setSelectedCountry] = useState('');
  const dropdownRef = useRef(null);

  const countries = [
    { code: 'AU', name: 'Australia' },
    { code: 'FK', name: 'Falkland Islands' },
    { code: 'IN', name: 'India' },
    { code: 'MO', name: 'Macao' },
    { code: 'MU', name: 'Mauritius' },
    { code: 'PH', name: 'Philippines' },
    { code: 'SA', name: 'Saudi Arabia' },
    { code: 'VN', name: 'Vietnam' }
  ];

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setIsOpen(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  const handleSelect = (countryCode) => {
    setSelectedCountry(countryCode);
    setIsOpen(false);
  };

  const selectedCountryData = countries.find(country => country.code === selectedCountry);

  const styles = {
    selectContainer: {
      width: '160px',
      position: 'relative',
    },
    selectTrigger: {
      width: '100%',
      height: '36px',
      padding: '4px 12px',
      fontSize: '14px',
      textAlign: 'center',
      border: '1px solid #e2e8f0',
      borderRadius: '6px',
      backgroundColor: 'white',
      cursor: 'pointer',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'space-between',
      transition: 'border-color 0.2s, box-shadow 0.2s',
    },
    selectedOption: {
      display: 'flex',
      alignItems: 'center',
      gap: '8px',
    },
    placeholder: {
      color: '#6b7280',
    },
    dropdownArrow: {
      height: '16px',
      width: '16px',
      transform: isOpen ? 'rotate(180deg)' : 'rotate(0)',
      transition: 'transform 0.2s',
    },
    dropdownContent: {
      position: 'absolute',
      top: '100%',
      left: '0',
      marginTop: '4px',
      width: '160px',
      backgroundColor: 'white',
      border: '1px solid #e2e8f0',
      borderRadius: '6px',
      boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
      zIndex: '10',
      maxHeight: '240px',
      overflowY: 'auto',
    },
    dropdownItem: {
      padding: '8px 12px',
      cursor: 'pointer',
      '&:hover': {
        backgroundColor: '#f3f4f6',
      },
    },
    countryOption: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      gap: '8px',
    },
    countryFlag: {
      width: '20px',
      height: '14px',
      objectFit: 'cover',
      borderRadius: '2px',
      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.1)',
    },
    countryCode: {
      fontSize: '14px',
      fontWeight: '500',
    },
  };

  return (
    <div style={styles.selectContainer} ref={dropdownRef}>
      <button
        onClick={() => setIsOpen(!isOpen)}
        style={{
          ...styles.selectTrigger,
          ...(isOpen && {
            borderColor: '#3b82f6',
            boxShadow: '0 0 0 2px rgba(59, 130, 246, 0.2)',
          }),
        }}
      >
        {selectedCountry ? (
          <div style={styles.selectedOption}>
            <img
              src={`/flags/${selectedCountry.toLowerCase()}.svg`}
              alt={`${selectedCountryData?.name} flag`}
              style={styles.countryFlag}
            />
            <span style={styles.countryCode}>{selectedCountry}</span>
          </div>
        ) : (
          <span style={styles.placeholder}>Select</span>
        )}
        <svg
          style={styles.dropdownArrow}
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path fillRule="evenodd" d="M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z" clipRule="evenodd" />
        </svg>
      </button>

      {isOpen && (
        <div style={styles.dropdownContent}>
          {countries.map((country) => (
            <div
              key={country.code}
              onClick={() => handleSelect(country.code)}
              style={{
                ...styles.dropdownItem,
                ':hover': {
                  backgroundColor: '#f3f4f6',
                },
              }}
              onMouseEnter={(e) => {
                e.currentTarget.style.backgroundColor = '#f3f4f6';
              }}
              onMouseLeave={(e) => {
                e.currentTarget.style.backgroundColor = 'transparent';
              }}
            >
              <div style={styles.countryOption}>
                <img
                  src={`/flags/${country.code.toLowerCase()}.svg`}
                  alt={`${country.name} flag`}
                  style={styles.countryFlag}
                />
                <span style={styles.countryCode}>{country.code}</span>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default CustomCountrySelect;
